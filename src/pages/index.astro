---
import Layout from '../layouts/Layout.astro'
import pentagramImage from '../assets/images/pentagram.webp'
import opusEponymous from '../assets/images/albums/opus_eponymous.webp'
import prequelle from '../assets/images/albums/prequelle.webp'
import meliora from '../assets/images/albums/meliora.webp'
import infestissumam from '../assets/images/albums/infestissumam.webp'
import impera from '../assets/images/albums/impera.webp'
import Album from '../components/Album/index.astro'
import AlbumInfo from '../components/AlbumInfo/index.astro'
import { Image } from '@astrojs/image/components'
import { GHOST_ALBUMS } from '../constants'
---
<Layout title="Welcome to Astro.">
	<div class="background-blob absolute blur-[140px] -top-24 -left-44 w-[65%] h-[80%] opacity-70 rounded-full" />
	<div class="background-blob absolute blur-[140px] top-16 right-10 w-[50%] h-[75%] rounded-full" />
	<div class="background-blob absolute blur-[140px] -bottom-[30%] left-[30%] w-[460px] h-[80%] rounded-full" />
	<div class="background-blob absolute blur-[140px] -bottom-36 right-[0%] w-[460px] h-[80%] rounded-full" />
	<div class="background-blob absolute blur-[140px] -bottom-36 left-[0%] w-[460px] h-[80%] rounded-full" />

	<div class="relative backdrop-blur-md min-h-screen w-screen flex flex-row-reverse justify-center items-center">
		<div id="albums_info_container" class="absolute min-h-screen w-0 pt-40 flex justify-start items-start">
			<ul class="albums">
				{GHOST_ALBUMS.map(({ id, name, songs }) => (
					<AlbumInfo id={id} name={name} songs={songs} />
				))}
			</ul>
		</div>
		<div id="pentagram-container" class="z-10 flex items-center justify-center h-full relative w-[40%]">
			<Image id="pentagram-image" class="blur-[2px] max-w-none w-full" src={pentagramImage} alt="pentagram image" />

			<Album
				albumId="opus_eponymous"
				className="absolute w-[22%] -top-[10%] left-[50%] -translate-x-[50%]"
				imageSrc={opusEponymous}
				imageAlt="opus_eponymous album cover image"
			/>

			<Album
				albumId="infestissumam"
				className="absolute w-[22%] top-[28%] -right-[8%]"
				imageSrc={infestissumam}
				imageAlt="infestissumam album cover image"
			/>

			<Album
				albumId="meliora"
				className="absolute w-[22%] top-[78%] right-[8%]"
				imageSrc={meliora}
				imageAlt="meliora album cover image"
			/>

			<Album
				albumId="prequelle"
				className="absolute w-[22%] top-[78%] left-[6%]"
				imageSrc={prequelle}
				imageAlt="prequelle album cover image"
			/>

			<Album
				albumId="impera"
				className="absolute w-[22%] top-[28%] -left-[8%]"
				imageSrc={impera}
				imageAlt="impera album cover image"
			/>
		</div>
	</div>

	<div id="youtube-player"></div>

<script class="yt-script">
const PLAYING_BTN_CLASS = 'playing'
const PLAY_SONG_BTNS_CLASS = 'play-button'

// 2. This code loads the IFrame Player API code asynchronously.
const tag = document.createElement('script')

tag.src = 'https://www.youtube.com/iframe_api?origin=http://localhost:3000'
const firstScriptTag = document.querySelector('.yt-script')
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)

// 3. This function creates an <iframe> (and YouTube player)
//    after the API code downloads.
let player
function onYouTubeIframeAPIReady () {
	player = new YT.Player('youtube-player', {
		height: '0',
		width: '0',
		videoId: 'IlZajb2Cpx8',
		host: `${window.location.protocol}//www.youtube.com`,
		events: {
			onReady: onPlayerReady
		},
		playerVars: {
			origin: window.location.origin
		}
	})
}

let currentPlayingBtn = null

function onPlayerReady () {
	const playBtns = document.querySelectorAll(`.${PLAY_SONG_BTNS_CLASS}`)
	playBtns.forEach((btn) => {
		btn.disabled = false
	})
}

function stopVideo () {
	currentPlayingBtn.classList.remove(PLAYING_BTN_CLASS)

	const pauseIcon = currentPlayingBtn.querySelector('.pause_song')
	const playIcon = currentPlayingBtn.querySelector('.play_song')

	pauseIcon.classList.add('hidden')
	playIcon.classList.remove('hidden')
	player.stopVideo()
}

function playSong () {
	currentPlayingBtn.classList.add('playing')

	const pauseIcon = currentPlayingBtn.querySelector('.pause_song')
	const playIcon = currentPlayingBtn.querySelector('.play_song')

	pauseIcon.classList.remove('hidden')
	playIcon.classList.add('hidden')

	player.loadVideoById(currentPlayingBtn.dataset.videoId)
}

// Event listener for play song buttons.
const playButtons = document.querySelectorAll('.play-button')

playButtons.forEach((btn) => {
	btn.addEventListener('click', function () {
		const isPausingASong = currentPlayingBtn && this.dataset.videoId === currentPlayingBtn?.dataset?.videoId

		if (currentPlayingBtn) {
			stopVideo()
			currentPlayingBtn = null
		}

		if (!isPausingASong) {
			currentPlayingBtn = this
			playSong()
		}
	})
})
</script>

</Layout>
